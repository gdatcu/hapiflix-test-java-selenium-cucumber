# Numele workflow-ului, vizibil în tab-ul "Actions" din GitHub
name: Testare Automată cu Selenium și TestNG

# Declanșarea workflow-ului
on:
  # Rulează la push-uri pe branch-ul main
  push:
    branches: [ main ]
  # Rulează la pull request-uri către branch-ul main
  pull_request:
    branches: [ main ]

# Definirea job-urilor care vor rula
jobs:
  # Un singur job numit "build-and-test"
  build-and-test:
    # Rulează pe cea mai recentă versiune de Ubuntu disponibilă pe GitHub
    runs-on: ubuntu-latest

    # Pașii executați în cadrul job-ului
    steps:
      # Pasul 1: Descarcă codul din repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Pasul 2: Configurează mediul Java cu JDK versiunea 23
      # Versiunea este preluată din fișierul pom.xml
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'oracle' # Distribuție care suportă Java 23

      # Pasul 3: Cache pentru dependențele Maven
      # Accelerează rulările viitoare prin salvarea pachetelor descărcate
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Pasul 4: Rulează testele folosind Maven
      # Maven va compila codul și va rula testele definite în suita testng.xml
      - name: Run tests with Maven
        run: mvn test

      # Pasul 5: Încarcă artefactele (rapoartele de testare)
      # Acest pas rulează întotdeauna, chiar dacă testele eșuează, pentru a putea analiza rezultatele
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rapoarte-de-testare
          path: |
            target/surefire-reports/
            extent-report.html
            Test Results - TesteDeBaza.html